version: "3.7"

services:
  backend:
    image: node:12
    command: node_modules/.bin/persea --dir=dist --port=80 dev
    env_file: ./api.env
    depends_on:
      - db
      - compiler
    ports:
      - 80
    working_dir: /app
    volumes:
      - ./backend:/app
    labels:
      - "traefik.http.middlewares.strip-api.stripprefix.prefixes=/api"
      - "traefik.http.routers.app.priority=200"
      - "traefik.http.routers.app.rule=PathPrefix(`/api`)"
      - "traefik.http.routers.app.middlewares=strip-api"

  frontend:
    image: node:12
    command: yarn dev
    environment:
      - FRONTEND_API_URL=http://localhost:1111/api
      - BACKEND_API_URL=http://backend:80
    depends_on:
      - db
    ports:
      - 3000
      - 10000
    working_dir: /app
    volumes:
      - ./frontend:/app
    labels:
      - "traefik.http.routers.frontend.priority=100"
      - "traefik.http.routers.frontend.rule=PathPrefix(`/`)"

  compiler:
    image: node:12
    command: node_modules/.bin/tsc --watch
    working_dir: /app
    volumes:
      - ./backend:/app

  checkups-worker:
    image: node:12
    command: node_modules/.bin/ts-node src/workers/checkups.ts
    env_file: ./api.env
    depends_on:
      - db
    working_dir: /app
    volumes:
      - ./backend:/app

  tasks-worker:
    image: node:12
    command: node_modules/.bin/ts-node src/workers/tasks.ts
    env_file: ./api.env
    depends_on:
      - db
      - mailhog
    working_dir: /app
    volumes:
      - ./backend:/app

  test-service:
    image: node:12
    command: node_modules/.bin/persea --port=80 run
    working_dir: /app
    volumes:
      - ./examples/test-service:/app

  mailhog:
    image: mailhog/mailhog
    ports:
      - 1113:8025

  db:
    image: postgres
    environment:
      - POSTGRES_PASSWORD=password

  proxy:
    image: traefik:v2.0
    command: --api.insecure=true --providers.docker
    ports:
      - 1111:80
      - 1112:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
